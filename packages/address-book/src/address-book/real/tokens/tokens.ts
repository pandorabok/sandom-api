import type { Token } from '../../../types/token.js';

const ETH = {
  name: 'Wrapped Re.Al Ether',
  address: '0x90c6E93849E06EC7478ba24522329d14A5954Df4',
  symbol: 'WREETH',
  oracleId: 'reETH',
  decimals: 18,
  chainId: 111188,
  website: 'https://weth.io/',
  description: 'Ether or ETH is the native currency built on the Ethereum blockchain.',
  bridge: 'real-canonical',
  logoURI: '',
  documentation: 'https://ethereum.org/en/developers/docs/',
} as const satisfies Token;

export const tokens = {
  WNATIVE: ETH,
  FEES: ETH,
  ETH,
  reETH: ETH,
  WREETH: ETH,
  USDC: {
    name: 'USD Coin',
    address: '0xc518A88c67CECA8B3f24c4562CB71deeB2AF86B7',
    symbol: 'USDC',
    oracleId: 'USDC',
    decimals: 6,
    website: 'https://www.centre.io/',
    description: 'Arbitrum-based USDC bridged via the official re.al Bridge.',
    bridge: 'real-canonical',
    chainId: 111188,
    documentation: 'https://developers.circle.com/docs',
  },
  DAI: {
    name: 'DAI Stablecoin',
    symbol: 'DAI',
    oracleId: 'DAI',
    address: '0x75d0cBF342060b14c2fC756fd6E717dFeb5B1B70',
    chainId: 111188,
    decimals: 18,
    logoURI: '',
    website: 'https://makerdao.com/en/',
    bridge: 'real-canonical',
    documentation:
      'https://docs.makerdao.com/smart-contract-modules/dai-module/dai-detailed-documentation',
    description:
      'Dai is a stablecoin cryptocurrency which aims to keep its value as close to one United States dollar as possible through an automated system of smart contracts on the Ethereum blockchain',
    risks: ['NO_TIMELOCK'],
  },
  arcUSD: {
    name: 'arcUSD',
    address: '0xAEC9e50e3397f9ddC635C6c429C8C7eca418a143',
    symbol: 'arcUSD',
    oracleId: 'arcUSD',
    decimals: 18,
    website: 'https://arcana.finance/',
    documentation: 'https://docs.arcana.finance/',
    description:
      'Arcana distributes the yield generated from delta-neutral strategies through arcUSD, a rebasing token soft-pegged to the dollar. The yield is distributed to arcUSD holders in the form of daily rebases, increasing their balance each period. On top of the rebases, arcUSD can be deployed in DeFi to unlock additional reward composability.',
    bridge: 'native',
    chainId: 111188,
    risks: ['NO_TIMELOCK'],
  },
  UKRE: {
    name: 'UK Real Estate',
    address: '0x835d3E1C0aA079C6164AAd21DCb23E60eb71AF48',
    symbol: 'UKRE',
    oracleId: 'UKRE',
    decimals: 18,
    website: 'https://www.tangible.store/',
    documentation: 'https://docs.tangible.store/',
    description:
      'UKRE is a Tangible Basket token backed by tokenized real estate in the UK. Tangible Baskets are permissionless, rebasing ERC-20 tokens—100% backed by tokenized, yield-generating real estate—that distributed yield back to token holders via daily rebase. Baskets price is soft-pegged to the TPV (true property value) of the assets in the pool and will fluctuate based on market demand and the activity of arbitrageurs. With Baskets, anyone, anywhere, at any budget can invest in income-producing real estate with just a few clicks.',
    bridge: 'native',
    chainId: 111188,
    risks: ['NO_TIMELOCK'],
  },
  USTB: {
    name: 'US T-Bill',
    address: '0x83feDBc0B85c6e29B589aA6BdefB1Cc581935ECD',
    symbol: 'USTB',
    oracleId: 'USTB',
    decimals: 18,
    website: 'https://www.tangible.store/ustb',
    documentation: 'https://docs.tangible.store/ustb/ustb-token',
    description:
      "USTB is a fully permissionless, cross-chain, rebasing dollar-pegged stablecoin. USTB is a wrapped version of USDM, with USDM supplying 100% of the backing for USTB. USDM is backed by Mountain Protocol's reserves of short-duration US Treasuries (T-Bills) having an average duration of less than 3 months or less.",
    bridge: 'layer-zero',
    chainId: 111188,
    risks: ['NO_TIMELOCK'],
  },
  PEARL: {
    name: 'Pearl',
    address: '0xCE1581d7b4bA40176f0e219b2CaC30088Ad50C7A',
    symbol: 'PEARL',
    oracleId: 'PEARL',
    decimals: 18,
    website: 'https://www.pearl.exchange/',
    documentation: 'https://docs.pearl.exchange/',
    description:
      'Pearl is the native liquidity layer for RWAs on re.al blockchain. Pearl provides a liquidity solution for both new and existing RWA protocols, solving initial liquidity challenges while also serving as an efficient solution to long-term liquidity incentivization.',
    bridge: 'native',
    chainId: 111188,
    risks: ['NO_TIMELOCK'],
  },
  RWA: {
    name: 're.al',
    address: '0x4644066f535Ead0cde82D209dF78d94572fCbf14',
    symbol: 'RWA',
    oracleId: 'RWA',
    decimals: 18,
    website: 'https://re.al/',
    documentation: 'https://docs.re.al/',
    description:
      'The RWA token is the governance token to the re.al ecosystem. RWA will exist unlocked as RWA (ERC-20) and locked as veRWA (ERC-721). When locked into veRWA it will provide holders two primary benefits: Value Accrual and Governance Rights',
    bridge: 'native',
    chainId: 111188,
    risks: ['NO_TIMELOCK'],
  },
  stRWA: {
    name: 'Liquid Staked RWA',
    address: '0x154F5DB4950d2cd4a7Af425E11865215F90DdB07',
    symbol: 'stRWA',
    oracleId: 'stRWA',
    decimals: 18,
    website: 'https://re.al/',
    documentation: 'https://docs.re.al/',
    description:
      'stRWA is a liquid version of veRWA that rebases to distribute accrued yield, making veRWA liquid and composable with DeFi protocols.',
    bridge: 'native',
    chainId: 111188,
    risks: ['NO_TIMELOCK'],
  },
  MORE: {
    name: 'MORE',
    address: '0x25ea98ac87A38142561eA70143fd44c4772A16b6',
    symbol: 'MORE',
    oracleId: 'MORE',
    decimals: 18,
    website: 'https://stackmore.xyz/',
    documentation: 'https://docs.stackmore.xyz/',
    description:
      'Stack’s $MORE token is a non-algorithmic, collateral-backed stablecoin. This means that every $1 USD of $MORE should have more than $1 USD of collateral backing. Stack considers $MORE to be worth $1 however at times it may not trade at this value. In these instances, Stack has several options at its disposal to regain the $1 USD peg.',
    bridge: 'native',
    chainId: 111188,
    risks: ['NO_TIMELOCK'],
  },
} as const satisfies Record<string, Token>;
